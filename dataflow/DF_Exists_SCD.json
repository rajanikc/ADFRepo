{
	"name": "DF_Exists_SCD",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_AzureSqlTbl_StudentSrc",
						"type": "DatasetReference"
					},
					"name": "StudentSrcTbl"
				},
				{
					"dataset": {
						"referenceName": "DS_AzureSqlTbl_StudentDim",
						"type": "DatasetReference"
					},
					"name": "StudentDimTblRef"
				}
			],
			"sinks": [
				{
					"name": "StudentDimSink"
				}
			],
			"transformations": [
				{
					"name": "NewStudent",
					"description": "Checks for new students"
				},
				{
					"name": "DeriveStudentColumns"
				},
				{
					"name": "StudentSkey"
				}
			],
			"scriptLines": [
				"parameters{",
				"     MaxSurrKey as integer (0)",
				"}",
				"source(output(",
				"          ROLL_NO as integer,",
				"          FIRST_NAME as string,",
				"          MIDDLE_NAME as string,",
				"          LAST_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT  ROLL_NO,\\nFIRST_NAME,\\nMIDDLE_NAME,\\nLAST_NAME FROM DBO.STUDENT_SRC\\n',",
				"     format: 'query') ~> StudentSrcTbl",
				"source(output(",
				"          STUDENT_SKEY as integer,",
				"          ROLL_NO as integer,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          FULL_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT\\nSTUDENT_SKEY,\\nROLL_NO,\\nFIRST_NAME,\\nMIDDLE_NAME\\nLAST_NAME,\\nFULL_NAME\\nFROM DBO.STUDENT_DIM',",
				"     format: 'query') ~> StudentDimTblRef",
				"StudentSrcTbl, StudentDimTblRef exists(StudentSrcTbl@ROLL_NO == StudentDimTblRef@ROLL_NO,",
				"     negate:true,",
				"     broadcast: 'auto')~> NewStudent",
				"StudentSkey derive(FULL_NAME = concat(FIRST_NAME, ' ', MIDDLE_NAME, ' ',LAST_NAME),",
				"          START_DATE = currentDate(),",
				"          END_DATE = toDate('9999-01-01'),",
				"          STUDENT_SKEY = STUDENT_INC_SKEY+$MaxSurrKey) ~> DeriveStudentColumns",
				"NewStudent keyGenerate(output(STUDENT_INC_SKEY as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> StudentSkey",
				"DeriveStudentColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> StudentDimSink"
			]
		}
	}
}